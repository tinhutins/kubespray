## Deploy a Prometheus instance
##
prometheus:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.allow-http: "true"
      kubernetes.io/ingress.class: nginx
    hosts:
      - {{prometheus_fqdn}}
  ## Settings affecting prometheusSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
  ##
  prometheusSpec:
    ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the servicemonitors created
    ##
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    ## How long to retain metrics
    ##
    retention: 3d
    scrapeInterval: "15s"
    evaluation_interval: "15s"
    secrets:
    - etcd-client-cert

## Deploy a Grafana instance
##
grafana:
  enabled: true
  adminPassword: admin
  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: true
    ## Annotations for Grafana Ingress
    ##
    annotations:
      kubernetes.io/ingress.allow-http: "true"
      kubernetes.io/ingress.class: nginx
    hosts:
      - {{grafana_fqdn}}
  ## Grafana's primary configuration
  ## NOTE: values in map will be converted to ini format
  ## ref: http://docs.grafana.org/installation/configuration/
  ##
  grafana.ini:
    server:
      domain: {{grafana_fqdn}}
      root_url: http://{{grafana_fqdn}}/
      serve_from_sub_path: false
  sidecar:
    datasources:
      defaultDatasourceEnabled: true
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki-loki-distributed-query-frontend.monitoring:3100

## ref: https://prometheus.io/docs/alerting/alertmanager/
##
alertmanager:
  ## Deploy alertmanager
  ##
  enabled: true

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.allow-http: "true"
      kubernetes.io/ingress.class: nginx
    hosts:
      - {{alertmanager_fqdn}}

  ## Settings affecting alertmanagerSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#alertmanagerspec
  ##
  alertmanagerSpec:
    ## Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression
    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).
    ##
    retention: 120h

kubeEtcd:
  enabled: true
  service:
    port: 2379
    targerPort: 2379
  endpoints:
{% for server in groups['kube_control_plane'] %}
    - {{hostvars[server]['ansible_facts']['default_ipv4']['address']}}
{% endfor %}
  serviceMonitor:
   scheme: https
   insecureSkipVerify: false
   serverName: localhost
   caFile: /etc/prometheus/secrets/etcd-client-cert/ca.crt
   certFile: /etc/prometheus/secrets/etcd-client-cert/healthcheck-client.crt
   keyFile: /etc/prometheus/secrets/etcd-client-cert/healthcheck-client.key
